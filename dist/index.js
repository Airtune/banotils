"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),require("crypto");function e(e){return(4294967296+e).toString(16).substring(1)}var t={normalizeInput:function(e){let t;if(e instanceof Uint8Array)t=e;else if(e instanceof Buffer)t=new Uint8Array(e);else{if("string"!=typeof e)throw new Error("Input must be an string, Buffer or Uint8Array");t=new Uint8Array(Buffer.from(e,"utf8"))}return t},toHex:function(e){return Array.prototype.map.call(e,(function(e){return(e<16?"0":"")+e.toString(16)})).join("")},debugPrint:function(t,r,n){let a="\n"+t+" = ";for(let o=0;o<r.length;o+=2){if(32===n)a+=e(r[o]).toUpperCase(),a+=" ",a+=e(r[o+1]).toUpperCase();else{if(64!==n)throw new Error("Invalid size "+n);a+=e(r[o+1]).toUpperCase(),a+=e(r[o]).toUpperCase()}o%6==4?a+="\n"+new Array(t.length+4).join(" "):o<r.length-2&&(a+=" ")}console.log(a)},testSpeed:function(e,t,r){let n=(new Date).getTime();const a=new Uint8Array(t);for(let e=0;e<t;e++)a[e]=e%256;const o=(new Date).getTime();console.log("Generated random input in "+(o-n)+"ms"),n=o;for(let o=0;o<r;o++){const r=e(a),o=(new Date).getTime(),i=o-n;n=o,console.log("Hashed in "+i+"ms: "+r.substring(0,20)+"..."),console.log(Math.round(t/(1<<20)/(i/1e3)*100)/100+" MB PER SECOND")}}};const r=t;function n(e,t,r){const n=e[t]+e[r];let a=e[t+1]+e[r+1];n>=4294967296&&a++,e[t]=n,e[t+1]=a}function a(e,t,r,n){let a=e[t]+r;r<0&&(a+=4294967296);let o=e[t+1]+n;a>=4294967296&&o++,e[t]=a,e[t+1]=o}function o(e,t){return e[t]^e[t+1]<<8^e[t+2]<<16^e[t+3]<<24}function i(e,t,r,o,i,s){const l=u[i],d=u[i+1],p=u[s],f=u[s+1];n(c,e,t),a(c,e,l,d);let h=c[o]^c[e],g=c[o+1]^c[e+1];c[o]=g,c[o+1]=h,n(c,r,o),h=c[t]^c[r],g=c[t+1]^c[r+1],c[t]=h>>>24^g<<8,c[t+1]=g>>>24^h<<8,n(c,e,t),a(c,e,p,f),h=c[o]^c[e],g=c[o+1]^c[e+1],c[o]=h>>>16^g<<16,c[o+1]=g>>>16^h<<16,n(c,r,o),h=c[t]^c[r],g=c[t+1]^c[r+1],c[t]=g>>>31^h<<1,c[t+1]=h>>>31^g<<1}const s=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),l=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3].map((function(e){return 2*e}))),c=new Uint32Array(32),u=new Uint32Array(32);function d(e,t){let r=0;for(r=0;r<16;r++)c[r]=e.h[r],c[r+16]=s[r];for(c[24]=c[24]^e.t,c[25]=c[25]^e.t/4294967296,t&&(c[28]=~c[28],c[29]=~c[29]),r=0;r<32;r++)u[r]=o(e.b,4*r);for(r=0;r<12;r++)i(0,8,16,24,l[16*r+0],l[16*r+1]),i(2,10,18,26,l[16*r+2],l[16*r+3]),i(4,12,20,28,l[16*r+4],l[16*r+5]),i(6,14,22,30,l[16*r+6],l[16*r+7]),i(0,10,20,30,l[16*r+8],l[16*r+9]),i(2,12,22,24,l[16*r+10],l[16*r+11]),i(4,14,16,26,l[16*r+12],l[16*r+13]),i(6,8,18,28,l[16*r+14],l[16*r+15]);for(r=0;r<16;r++)e.h[r]=e.h[r]^c[r]^c[r+16]}function p(e,t){if(0===e||e>64)throw new Error("Illegal output length, expected 0 < length <= 64");if(t&&t.length>64)throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");const r={b:new Uint8Array(128),h:new Uint32Array(16),t:0,c:0,outlen:e};for(let e=0;e<16;e++)r.h[e]=s[e];const n=t?t.length:0;return r.h[0]^=16842752^n<<8^e,t&&(f(r,t),r.c=128),r}function f(e,t){for(let r=0;r<t.length;r++)128===e.c&&(e.t+=e.c,d(e,!1),e.c=0),e.b[e.c++]=t[r]}function h(e){for(e.t+=e.c;e.c<128;)e.b[e.c++]=0;d(e,!0);const t=new Uint8Array(e.outlen);for(let r=0;r<e.outlen;r++)t[r]=e.h[r>>2]>>8*(3&r);return t}function g(e,t,n){n=n||64,e=r.normalizeInput(e);const a=p(n,t);return f(a,e),h(a)}var b={blake2b:g,blake2bHex:function(e,t,n){const a=g(e,t,n);return r.toHex(a)},blake2bInit:p,blake2bUpdate:f,blake2bFinal:h};const m=t;function y(e,t){return e[t]^e[t+1]<<8^e[t+2]<<16^e[t+3]<<24}function w(e,t,r,n,a,o){A[e]=A[e]+A[t]+a,A[n]=v(A[n]^A[e],16),A[r]=A[r]+A[n],A[t]=v(A[t]^A[r],12),A[e]=A[e]+A[t]+o,A[n]=v(A[n]^A[e],8),A[r]=A[r]+A[n],A[t]=v(A[t]^A[r],7)}function v(e,t){return e>>>t^e<<32-t}const k=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),x=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0]),A=new Uint32Array(16),I=new Uint32Array(16);function U(e,t){let r=0;for(r=0;r<8;r++)A[r]=e.h[r],A[r+8]=k[r];for(A[12]^=e.t,A[13]^=e.t/4294967296,t&&(A[14]=~A[14]),r=0;r<16;r++)I[r]=y(e.b,4*r);for(r=0;r<10;r++)w(0,4,8,12,I[x[16*r+0]],I[x[16*r+1]]),w(1,5,9,13,I[x[16*r+2]],I[x[16*r+3]]),w(2,6,10,14,I[x[16*r+4]],I[x[16*r+5]]),w(3,7,11,15,I[x[16*r+6]],I[x[16*r+7]]),w(0,5,10,15,I[x[16*r+8]],I[x[16*r+9]]),w(1,6,11,12,I[x[16*r+10]],I[x[16*r+11]]),w(2,7,8,13,I[x[16*r+12]],I[x[16*r+13]]),w(3,4,9,14,I[x[16*r+14]],I[x[16*r+15]]);for(r=0;r<8;r++)e.h[r]^=A[r]^A[r+8]}function B(e,t){if(!(e>0&&e<=32))throw new Error("Incorrect output length, should be in [1, 32]");const r=t?t.length:0;if(t&&!(r>0&&r<=32))throw new Error("Incorrect key length, should be in [1, 32]");const n={h:new Uint32Array(k),b:new Uint8Array(64),c:0,t:0,outlen:e};return n.h[0]^=16842752^r<<8^e,r>0&&(E(n,t),n.c=64),n}function E(e,t){for(let r=0;r<t.length;r++)64===e.c&&(e.t+=e.c,U(e,!1),e.c=0),e.b[e.c++]=t[r]}function F(e){for(e.t+=e.c;e.c<64;)e.b[e.c++]=0;U(e,!0);const t=new Uint8Array(e.outlen);for(let r=0;r<e.outlen;r++)t[r]=e.h[r>>2]>>8*(3&r)&255;return t}function _(e,t,r){r=r||32,e=m.normalizeInput(e);const n=B(r,t);return E(n,e),F(n)}var S={blake2s:_,blake2sHex:function(e,t,r){const n=_(e,t,r);return m.toHex(n)},blake2sInit:B,blake2sUpdate:E,blake2sFinal:F};var j={blake2b:b.blake2b,blake2bHex:b.blake2bHex,blake2bInit:b.blake2bInit,blake2bUpdate:b.blake2bUpdate,blake2bFinal:b.blake2bFinal,blake2s:S.blake2s,blake2sHex:S.blake2sHex,blake2sInit:S.blake2sInit,blake2sUpdate:S.blake2sUpdate,blake2sFinal:S.blake2sFinal};const z=function(e){let t;const r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r};new Uint8Array(32)[0]=9;const C=z(),G=z([1]);z([56129,1]),z([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]);const H=z([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),q=z([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),M=z([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]);function D(e,t){let r;for(r=0;r<16;r++)e[r]=0|t[r]}function R(e){let t,r;for(r=0;r<16;r++)e[r]+=65536,t=Math.floor(e[r]/65536),e[(r+1)*(r<15?1:0)]+=t-1+37*(t-1)*(15===r?1:0),e[r]-=65536*t}function P(e,t,r){let n;const a=~(r-1);for(let r=0;r<16;r++)n=a&(e[r]^t[r]),e[r]^=n,t[r]^=n}function T(e,t){let r,n,a;const o=z(),i=z();for(r=0;r<16;r++)i[r]=t[r];for(R(i),R(i),R(i),n=0;n<2;n++){for(o[0]=i[0]-65517,r=1;r<15;r++)o[r]=i[r]-65535-(o[r-1]>>16&1),o[r-1]&=65535;o[15]=i[15]-32767-(o[14]>>16&1),a=o[15]>>16&1,o[14]&=65535,P(i,o,1-a)}for(r=0;r<16;r++)e[2*r]=255&i[r],e[2*r+1]=i[r]>>8}function L(e,t,r){let n;for(n=0;n<16;n++)e[n]=t[n]+r[n]|0}function W(e,t,r){let n;for(n=0;n<16;n++)e[n]=t[n]-r[n]|0}function $(e,t,r){let n,a;const o=new Float64Array(31);for(n=0;n<31;n++)o[n]=0;for(n=0;n<16;n++)for(a=0;a<16;a++)o[n+a]+=t[n]*r[a];for(n=0;n<15;n++)o[n]+=38*o[n+16];for(n=0;n<16;n++)e[n]=o[n];R(e),R(e)}function O(e,t){$(e,t,t)}function N(e,t){const r=z(),n=z(),a=z(),o=z(),i=z(),s=z(),l=z(),c=z(),u=z();W(r,e[1],e[0]),W(u,t[1],t[0]),$(r,r,u),L(n,e[0],e[1]),L(u,t[0],t[1]),$(n,n,u),$(a,e[3],t[3]),$(a,a,H),$(o,e[2],t[2]),L(o,o,o),W(i,n,r),W(s,o,a),L(l,o,a),L(c,n,r),$(e[0],i,s),$(e[1],c,l),$(e[2],l,s),$(e[3],i,c)}function V(e,t,r){let n;for(n=0;n<4;n++)P(e[n],t[n],r)}function K(e,t){const r=z(),n=z(),a=z();!function(e,t){const r=z();let n;for(n=0;n<16;n++)r[n]=t[n];for(n=253;n>=0;n--)O(r,r),2!==n&&4!==n&&$(r,r,t);for(n=0;n<16;n++)e[n]=r[n]}(a,t[2]),$(r,t[0],a),$(n,t[1],a),T(e,n),e[31]^=function(e){const t=new Uint8Array(32);return T(t,e),1&t[0]}(r)<<7}function Y(e,t){const r=[z(),z(),z(),z()];D(r[0],q),D(r[1],M),D(r[2],G),$(r[3],q,M),function(e,t,r){let n,a;for(D(e[0],C),D(e[1],G),D(e[2],G),D(e[3],C),a=255;a>=0;--a)n=r[a/8|0]>>(7&a)&1,V(e,t,n),N(t,e),N(e,e),V(e,t,n)}(e,r,t)}z([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);const J=e=>{const t=e.length/4*5,r=new Uint8Array(t);for(let n=1;n<=t;n++){const t=n-1,a=n%5,o=t-(n-a)/5,i=e[o-1]<<5-a,s=e[o]>>a;r[t]=(s+i)%16}return r},X=e=>{const t=new Uint8Array(2*e.length);for(let r=0;r<e.length;r++)t[2*r]=e[r]/16|0,t[2*r+1]=e[r]%16;return t},Q=e=>{const t=e.length/2,r=new Uint8Array(t);for(let n=0;n<t;n++)r[n]=16*e[2*n]+e[2*n+1];return r},Z=e=>{const t="13456789abcdefghijkmnopqrstuwxyz".split(""),r=e.length,n=e.split(""),a=new Uint8Array(r);for(let e=0;e<r;e++)a[e]=t.indexOf(n[e]);return a},ee=e=>{const t=new Uint8Array(e.length);for(let r=0;r<e.length;r++)t[r]=parseInt(e.substr(r,1),16);return t},te=e=>{const t=e.length/5*4,r=new Uint8Array(t);for(let n=1;n<=t;n++){const a=n-1,o=n%4,i=a+(n-o)/4,s=e[i]<<o;let l;l=(t-n)%4==0?e[i-1]<<4:e[i+1]>>4-o,r[a]=(l+s)%32}return r},re=e=>{const t="13456789abcdefghijkmnopqrstuwxyz".split("");let r="";for(let n=0;n<e.length;n++)r+=t[e[n]];return r},ne=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function ae(e,t){let r,n,a,o;for(n=63;n>=32;--n){for(r=0,a=n-32,o=n-12;a<o;++a)t[a]+=r-16*t[n]*ne[a-(n-32)],r=t[a]+128>>8,t[a]-=256*r;t[a]+=r,t[n]=0}for(r=0,a=0;a<32;a++)t[a]+=r-(t[31]>>4)*ne[a],r=t[a]>>8,t[a]&=255;for(a=0;a<32;a++)t[a]-=r*ne[a];for(n=0;n<32;n++)t[n+1]+=t[n]>>8,e[n]=255&t[n]}function oe(e){const t=new Float64Array(64);let r;for(r=0;r<64;r++)t[r]=e[r];for(r=0;r<64;r++)e[r]=0;ae(e,t)}function ie(e){let t=new Uint8Array(64);const r=[z(),z(),z(),z()],n=new Uint8Array(32),a=j.blake2bInit(64);return j.blake2bUpdate(a,e),t=j.blake2bFinal(a),t[0]&=248,t[31]&=127,t[31]|=64,Y(r,t),K(n,r),n}function se(e){let t=e.substring(4,64);const r=(e=>{const t=e.length-1,r=new Uint8Array(t);for(let n=0;n<t;n++)r[n]=e[n+1];return r})(J(Z(t.substring(0,52)))),n=J(Z(t.substring(52,60))),a=Q(r),o=j.blake2b(a,null,5).reverse(),i=n,s=X(o);if(!((e,t)=>{for(let r=0;r<e.length;r++)if(e[r]!=t[r])return!1;return!0})(i,s)){const e=re(te(i)),t=re(te(s));throw new Error(`Incorrect checksum ${e} != ${t}`)}return function(e){const t=new Uint8Array(e.length/2);for(let r=0;r<t.length;++r)t[r]=parseInt(e.substring(2*r+0,2*r+2),16);return t}((e=>{let t="";for(let r=0;r<e.length;r++)t+=e[r].toString(16).toUpperCase();return t})(r))}function le(e,t){const r=new Uint8Array(64+t.length);!function(e,t,r,n){let a,o,i=new Uint8Array(64),s=new Uint8Array(64),l=new Uint8Array(64);const c=new Float64Array(64),u=[z(),z(),z(),z()],d=ie(n);let p=j.blake2bInit(64,null);j.blake2bUpdate(p,n),i=j.blake2bFinal(p),i[0]&=248,i[31]&=127,i[31]|=64;const f=r+64;for(a=0;a<r;a++)e[64+a]=t[a];for(a=0;a<32;a++)e[32+a]=i[32+a];for(p=j.blake2bInit(64,null),j.blake2bUpdate(p,e.subarray(32)),l=j.blake2bFinal(p),oe(l),Y(u,l),K(e,u),a=32;a<64;a++)e[a]=d[a-32];for(p=j.blake2bInit(64,null),j.blake2bUpdate(p,e),s=j.blake2bFinal(p),oe(s),a=0;a<64;a++)c[a]=0;for(a=0;a<32;a++)c[a]=l[a];for(a=0;a<32;a++)for(o=0;o<32;o++)c[a+o]+=s[a]*i[o];ae(e.subarray(32),c)}(r,t,t.length,e);const n=new Uint8Array(64);for(let e=0;e<n.length;e++)n[e]=r[e];return n}const ce=new RegExp("^[0123456789abcdefABCDEF]{64}$");function ue(e){const t=new Uint8Array(e.length/2);for(let r=0;r<t.length;++r)t[r]=parseInt(e.substring(2*r+0,2*r+2),16);return t}function de(e){return Array.prototype.map.call(e,(e=>("00"+e.toString(16)).slice(-2))).join("").toUpperCase()}function pe(e){const t=new Uint8Array(8*e.length);for(let r=0;r<e.length;++r){const n=e[r];for(let e=7;e>=0;--e)t[8*r+(7-e)]=n&1<<e?1:0}return t}function fe(e,t){const r=e.toString().split(""),n=[];let a="";const o=[];for(;r.length;){let e=1*Number(r.shift());for(let t=0;e||t<n.length;++t)e+=10*(n[t]||0),n[t]=e%16,e=(e-n[t])/16}for(;n.length;)o.push(n.pop().toString(16));if(a=o.join(""),a.length%2!=0&&(a="0"+a),t>a.length/2){const e=t-a.length/2;for(let t=0;t<e;t++)a="00"+a}return a}function he(e){return ce.test(de(e))}function ge(e,t,r){const n=j.blake2bInit(8);j.blake2bUpdate(n,t),j.blake2bUpdate(n,e);const a=de(j.blake2bFinal(n).reverse());return BigInt("0x"+a)>r}function be(e){return"string"==typeof e?se(e):ie(e)}function me(e){return function(e){const t=Q(ee(e)),r=re(te(X(j.blake2b(t,null,5).reverse())));return`ban_${re(te(ee(`0${e}`)))}${r}`}(de(e))}var ye;!function(e){e[e.SEND=0]="SEND",e[e.RECEIVE=1]="RECEIVE"}(ye||(ye={}));function we(e,t){let r="";for(let n=t-1;n>-1;n--)r+=(e[n]>15?"":"0")+e[n].toString(16);return r}const ve=document.createElement("canvas"),ke=ve.getContext("webgl2"),xe=ke.createShader(ke.VERTEX_SHADER);ke.shaderSource(xe,"#version 300 es\nprecision highp float;\n#define GLSLIFY 1\nconst vec2 vertices[4]=vec2[](vec2(-1,+1),vec2(-1,-1),vec2(+1,+1),vec2(+1,-1));void main(){gl_Position=vec4(vertices[gl_VertexID],0.0,1.0);}"),ke.compileShader(xe);const Ae=ke.createShader(ke.FRAGMENT_SHADER);ke.shaderSource(Ae,"#version 300 es\nprecision highp float;precision highp int;\n#define GLSLIFY 1\nout vec4 fragColor;uniform uvec4 uWork0;uniform uvec4 uWork1;uniform uvec4 uHash0;uniform uvec4 uHash1;\n#define BLAKE2B_IV32_1 0x6A09E667u\nuint v[32]=uint[32](0xF2BDC900u,0x6A09E667u,0x84CAA73Bu,0xBB67AE85u,0xFE94F82Bu,0x3C6EF372u,0x5F1D36F1u,0xA54FF53Au,0xADE682D1u,0x510E527Fu,0x2B3E6C1Fu,0x9B05688Cu,0xFB41BD6Bu,0x1F83D9ABu,0x137E2179u,0x5BE0CD19u,0xF3BCC908u,0x6A09E667u,0x84CAA73Bu,0xBB67AE85u,0xFE94F82Bu,0x3C6EF372u,0x5F1D36F1u,0xA54FF53Au,0xADE682F9u,0x510E527Fu,0x2B3E6C1Fu,0x9B05688Cu,0x04BE4294u,0xE07C2654u,0x137E2179u,0x5BE0CD19u);uint m[32];const int SIGMA82[192]=int[192](0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,28,20,8,16,18,30,26,12,2,24,0,4,22,14,10,6,22,16,24,0,10,4,30,26,20,28,6,12,14,2,18,8,14,18,6,2,26,24,22,28,4,12,10,20,8,0,30,16,18,0,10,14,4,8,20,30,28,2,22,24,12,16,6,26,4,24,12,20,0,22,16,6,8,26,14,10,30,28,2,18,24,10,2,30,28,26,8,20,0,14,12,6,18,4,16,22,26,22,14,28,24,2,6,18,10,0,30,8,16,12,4,20,12,30,28,18,22,6,0,16,24,4,26,14,2,8,20,10,20,4,16,8,14,12,2,10,30,22,18,28,6,24,26,0,0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,28,20,8,16,18,30,26,12,2,24,0,4,22,14,10,6);void add_uint64(int a,uint b0,uint b1){uint o0=v[a]+b0;uint o1=v[a+1]+b1;if(v[a]>0xFFFFFFFFu-b0){o1++;}v[a]=o0;v[a+1]=o1;}void add_uint64(int a,int b){add_uint64(a,v[b],v[b+1]);}void B2B_G(int a,int b,int c,int d,int ix,int iy){add_uint64(a,b);add_uint64(a,m[ix],m[ix+1]);uint xor0=v[d]^ v[a];uint xor1=v[d+1]^ v[a+1];v[d]=xor1;v[d+1]=xor0;add_uint64(c,d);xor0=v[b]^ v[c];xor1=v[b+1]^ v[c+1];v[b]=(xor0>>24)^(xor1<<8);v[b+1]=(xor1>>24)^(xor0<<8);add_uint64(a,b);add_uint64(a,m[iy],m[iy+1]);xor0=v[d]^ v[a];xor1=v[d+1]^ v[a+1];v[d]=(xor0>>16)^(xor1<<16);v[d+1]=(xor1>>16)^(xor0<<16);add_uint64(c,d);xor0=v[b]^ v[c];xor1=v[b+1]^ v[c+1];v[b]=(xor1>>31)^(xor0<<1);v[b+1]=(xor0>>31)^(xor1<<1);}void main(){int i;uint uv_x=uint(gl_FragCoord.x);uint uv_y=uint(gl_FragCoord.y);uint x_pos=uv_x % 256u;uint y_pos=uv_y % 256u;uint x_index=(uv_x-x_pos)/256u;uint y_index=(uv_y-y_pos)/256u;m[0]=(x_pos ^(y_pos<<8)^((uWork0.b ^ x_index)<<16)^((uWork0.a ^ y_index)<<24));m[1]=(uWork1.r ^(uWork1.g<<8)^(uWork1.b<<16)^(uWork1.a<<24));m[2]=uHash0[0];m[3]=uHash0[1];m[4]=uHash0[2];m[5]=uHash0[3];m[6]=uHash1[0];m[7]=uHash1[1];m[8]=uHash1[2];m[9]=uHash1[3];for(i=0;i<12;i++){B2B_G(0,8,16,24,SIGMA82[i*16+0],SIGMA82[i*16+1]);B2B_G(2,10,18,26,SIGMA82[i*16+2],SIGMA82[i*16+3]);B2B_G(4,12,20,28,SIGMA82[i*16+4],SIGMA82[i*16+5]);B2B_G(6,14,22,30,SIGMA82[i*16+6],SIGMA82[i*16+7]);B2B_G(0,10,20,30,SIGMA82[i*16+8],SIGMA82[i*16+9]);B2B_G(2,12,22,24,SIGMA82[i*16+10],SIGMA82[i*16+11]);B2B_G(4,14,16,26,SIGMA82[i*16+12],SIGMA82[i*16+13]);B2B_G(6,8,18,28,SIGMA82[i*16+14],SIGMA82[i*16+15]);}if((BLAKE2B_IV32_1 ^ v[1]^ v[17])>0xFFFFFE00u){fragColor=vec4(float(x_index+1u)/255.,float(y_index+1u)/255.,float(x_pos)/255.,float(y_pos)/255.);}}"),ke.compileShader(Ae);const Ie=ke.createProgram();function Ue(e){try{return{hash:ue(e.hash)}}catch(e){}return null}ke.attachShader(Ie,xe),ke.attachShader(Ie,Ae),ke.linkProgram(Ie);const Be=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];function Ee(e){return e.length>=16&&e.length<=32&&e.length%4==0}let Fe="";async function _e(e){const t=await function(e,t=1){ve.width=ve.height=256<<t;const r=function(e){let t="";for(let r=e.length;r>0;r-=2)t+=e.slice(r-2,r);return t}(de(e));return ke.useProgram(Ie),ke.viewport(0,0,ke.drawingBufferWidth,ke.drawingBufferHeight),ke.clearColor(0,0,0,1),ke.uniform4uiv(ke.getUniformLocation(Ie,"uHash0"),new Uint32Array([parseInt(r.slice(56,64),16),parseInt(r.slice(48,56),16),parseInt(r.slice(40,48),16),parseInt(r.slice(32,40),16)])),ke.uniform4uiv(ke.getUniformLocation(Ie,"uHash1"),new Uint32Array([parseInt(r.slice(24,32),16),parseInt(r.slice(16,24),16),parseInt(r.slice(8,16),16),parseInt(r.slice(0,8),16)])),new Promise((e=>{const t=new Uint8Array(4),r=new Uint8Array(4);requestAnimationFrame((function n(){crypto.getRandomValues(t),crypto.getRandomValues(r),ke.uniform4uiv(ke.getUniformLocation(Ie,"uWork0"),Array.from(t)),ke.uniform4uiv(ke.getUniformLocation(Ie,"uWork1"),Array.from(r)),ke.clear(ke.COLOR_BUFFER_BIT),ke.drawArrays(ke.TRIANGLE_STRIP,0,4);const a=new Uint8Array(ke.drawingBufferWidth*ke.drawingBufferHeight*4);ke.readPixels(0,0,ke.drawingBufferWidth,ke.drawingBufferHeight,ke.RGBA,ke.UNSIGNED_BYTE,a);for(let n=0;n<a.length;n+=4)if(0!==a[n]){const o=we(r,4),i=we(new Uint8Array([a[n+2],a[n+3],t[2]^a[n]-1,t[3]^a[n+1]-1]),4);return void e(ue(o+i))}requestAnimationFrame(n)}))}))}(e);if(!ge(e,t,0xfffffe00n))throw new Error(`Generated work '${de(t)}' is invalid`);return t}async function Se(e,t,r,n,a){const o=be(e),i=await _e(t||o),s={type:"state"};return s.account=me(o),s.previous=de(t||new Uint8Array(32)),s.representative=me(r),s.balance=a.toString(10),s.work=de(i),s.link=de(n),s.signature=de(le(e,function(e){let t=BigInt(e.balance).toString(16);for(;t.length<32;)t="0"+t;const r=j.blake2bInit(32,null);return j.blake2bUpdate(r,ue("0000000000000000000000000000000000000000000000000000000000000006")),j.blake2bUpdate(r,be(e.account)),j.blake2bUpdate(r,ue(e.previous)),j.blake2bUpdate(r,be(e.representative)),j.blake2bUpdate(r,ue(t)),j.blake2bUpdate(r,ue(e.link)),j.blake2bFinal(r)}(s))),s}function je(e){if(!Fe)throw new Error("API URL is invalid");return new Promise(((t,r)=>{const n=JSON.stringify(e);fetch(Fe,{method:"POST",headers:{"Content-Type":"application/json","Content-Length":String(n.length)},body:n}).then((e=>{const r=e.json();t(r)})).catch((e=>{r(e)}))}))}function ze(e){return!!e&&!e.hasOwnProperty("error")}function Ce(e){const t=new Error("").stack.split("\n")[2].replace(/^\s+at\s+(.+?)\s.+/g,"$1"),r=t.substr(t.lastIndexOf(".")+1).trim();console.warn(`API call '${r}' failed with: '${e}'`)}async function Ge(e){const t=me(e),r=await je({action:"account_info",account:t});return ze(r)?function(e){try{return{blockCount:parseInt(e.block_count),frontier:ue(e.frontier),representativeBlock:ue(e.representative_block),modificationTimestamp:parseInt(e.modified_timestamp)}}catch(e){}return null}(r):(Ce(r.error),null)}async function He(e){const t=me(e),r=await je({action:"accounts_balances",accounts:[t]});return ze(r)?function(e){try{const t=Object.values(e.balances)[0];return{balance:BigInt(t.balance),pending:BigInt(t.pending)}}catch(e){}return null}(r):(Ce(r.error),null)}async function qe(e){const t=me(e),r=await je({action:"account_representative",account:t});return ze(r)?function(e){try{return{account:se(e.representative)}}catch(e){}return null}(r):(Ce(r.error),null)}async function Me(e,t=-1){const r=me(e),n=await je({action:"account_history",account:r,count:t,raw:!1});return ze(n)?function(e){try{if(Array.isArray(e.history)){const t={history:[]};for(const r of e.history)t.history.push({hash:ue(r.hash),amount:BigInt(r.amount),account:se(r.account),action:"send"===r.type?ye.SEND:ye.RECEIVE});return t}}catch(e){}return null}(n):(Ce(n.error),null)}async function De(e,t,r,n){const a=await Se(e,null,t,r,n),o=await je({action:"process",json_block:"true",subtype:"open",block:a});return ze(o)?Ue(o):(Ce(o.error),null)}exports.bytesToBits=pe,exports.bytesToHex=de,exports.decimalToHex=fe,exports.entropyToMnemonic=async function(e){if(!Ee(e))throw new TypeError(`Invalid entropy '${de(e)}'`);const t=new Uint8Array(await crypto.subtle.digest("SHA-256",e));return(pe(e).join("")+pe(t).join("").slice(0,8*e.length/32)).match(/(.{1,11})/g).map((e=>{const t=parseInt(e,2);return Be[t]})).join(" ")},exports.getAccountAddress=me,exports.getAccountBalance=He,exports.getAccountHistory=Me,exports.getAccountInfo=Ge,exports.getAccountPending=async function(e,t=-1){const r=me(e),n=await je({action:"accounts_pending",accounts:[r],count:t,threshold:1,source:!0});return ze(n)?function(e){try{const t={blocks:[]},r=Object.values(e.blocks)[0];for(const[e,n]of Object.entries(r)){const{amount:r,source:a}=n,o={amount:BigInt(r),hash:ue(e),source:se(a)};t.blocks.push(o)}return t}catch(e){}return null}(n):(Ce(n.error),null)},exports.getAccountRepresentative=qe,exports.getAmountFromRaw=function(e){const t=BigInt("1000000000000000000000000000"),r=BigInt("100000000000000000000000000000"),n=e/r,a=(e-n*r)/t;return n.toString()+"."+a.toString().padStart(2,"0")},exports.getPrivateKey=function(e,t=0){if(!he(e))throw new Error(`Invalid seed '${e}'`);const r=ue(fe(t,4)),n=j.blake2bInit(32);return j.blake2bUpdate(n,e),j.blake2bUpdate(n,r),j.blake2bFinal(n)},exports.getPublicKey=be,exports.getRawFromAmount=function(e){const t=e.indexOf(".");let r=BigInt("1");if(-1!==t){const n=(e=e.replace(".","")).length-t;r=BigInt("10")**BigInt(n)}return BigInt(e)*BigInt("100000000000000000000000000000")/r},exports.hexToBytes=ue,exports.isSeedValid=he,exports.isWorkValid=ge,exports.mnemonicToEntropy=async function(e){const t=e.normalize("NFKD").split(" ");if(t.length%3!=0)throw new Error(`Invalid mnemonic '${e}'`);const r=t.map((t=>{const r=Be.indexOf(t);if(-1===r)throw new Error(`Invalid mnemonic '${e}'`);let n=r.toString(2);for(;n.length<11;)n="0"+n;return n})).join(""),n=32*Math.floor(r.length/33),a=r.slice(0,n),o=r.slice(n),i=new Uint8Array(a.match(/(.{1,8})/g).map((e=>parseInt(e,2))));if(!Ee(i))throw new TypeError(`Invalid entropy '${de(i)}'`);if(pe(new Uint8Array(await crypto.subtle.digest("SHA-256",i))).join("").slice(0,8*i.length/32)!==o)throw new Error(`Invalid checksum '${o}'`);return i},exports.openAccount=De,exports.receiveAccount=async function(e,t,r,n){const a=be(e),o=await Me(a),i=await He(a);if(!o||0==o.history.length)return De(e,t,r,n);const s=n+i.balance,l=(await Ge(a)).frontier,c=await Se(e,l,t,r,s),u=await je({action:"process",json_block:"true",subtype:"receive",block:c});return ze(u)?Ue(u):(Ce(u.error),null)},exports.sendAccount=async function(e,t,r){const n=be(e),a=await Ge(n),o=await He(n),i=await qe(n),s=o.balance-r;if(o.balance<=0n||s<0n)return null;const l=a.frontier,c=await Se(e,l,i.account,t,s),u=await je({action:"process",json_block:"true",subtype:"send",block:c});return ze(u)?Ue(u):(Ce(u.error),null)},exports.setAPIURL=function(e){if(!e.startsWith("https")&&!e.startsWith("http"))throw new Error("Invalid API URL");Fe=e};
